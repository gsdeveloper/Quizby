$output-media-width: true !default; // true = all, otherwise use a list of numeric values (eg. 320px 23em)
@mixin min-width($bp) {
  @if type-of($output-media-width) != list {
    @media (min-width: $bp) {
      @content;
    }
  } @else {
    $output-bp: find-comparable($bp, $output-media-width);
    @if not comparable($output-bp, $bp) {
      @debug "Output breakpoint: #{$output-bp}, Chosen minimum width: #{$bp}";
    } @else if $output-bp >= $bp {
      @content;
    }
  }
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  border: 0;
}

html {
  font-size: 62.5%;
  box-sizing: border-box;
  line-height: calc(1.5em + (1.55 - 1.5) * ((100vw - 21em) / (35 - 21)));
  background-color: #5255ca;
}

body {
  box-sizing: border-box;
  overflow-x: hidden;
  background: rgb(248, 250, 247);
  font: 1.6em Overpass;
}

ul {
  list-style-type: none;
}

button {
  cursor: pointer;
  font: inherit;
}
