{"ast":null,"code":"var _jsxFileName = \"/home/guilhermesnd/\\xC1rea de Trabalho/shit_talkers/src/components/landing/Answers.js\";\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { setUserAnswer } from \"../../slices/rootSlice\";\n\nfunction Answers({\n  data,\n  dispatch\n}) {\n  function optionClicked(e, index) {\n    dispatch(setUserAnswer({\n      e,\n      index\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      position: \"absolute\",\n      top: \"0\",\n      right: \"0\",\n      fontSize: \"18px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, data.question.length), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"App__container--list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, data.possibleAnswers.map((ans, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    onClick: e => optionClicked(e.target.textContent, index),\n    style: data.userAnswer === ans ? {\n      backgroundColor: \"#5255ca\",\n      color: \"white\"\n    } : {\n      backgroundColor: \"initial\"\n    },\n    className: \"App__container--list--answer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, ans), /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"\",\n    className: \"App__container--list--chevron\",\n    src: \"./chevron.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Answers;","map":{"version":3,"sources":["/home/guilhermesnd/√Årea de Trabalho/shit_talkers/src/components/landing/Answers.js"],"names":["React","useEffect","useState","setUserAnswer","Answers","data","dispatch","optionClicked","e","index","position","top","right","fontSize","question","length","possibleAnswers","map","ans","target","textContent","userAnswer","backgroundColor","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAjB,EAAqC;AACnC,WAASC,aAAT,CAAuBC,CAAvB,EAA0BC,KAA1B,EAAiC;AAC/BH,IAAAA,QAAQ,CAACH,aAAa,CAAC;AAAEK,MAAAA,CAAF;AAAKC,MAAAA;AAAL,KAAD,CAAd,CAAR;AACD;;AACD,sBACE,uDACE;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,GAAG,EAAE,GAA7B;AAAkCC,MAAAA,KAAK,EAAE,GAAzC;AAA8CC,MAAAA,QAAQ,EAAE;AAAxD,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGR,IAAI,CAACS,QAAL,CAAcC,MAHjB,CADF,eAME;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,IAAI,CAACW,eAAL,CAAqBC,GAArB,CAAyB,CAACC,GAAD,EAAMT,KAAN,kBACxB;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,OAAO,EAAGD,CAAD,IAAOD,aAAa,CAACC,CAAC,CAACW,MAAF,CAASC,WAAV,EAAuBX,KAAvB,CAF/B;AAGE,IAAA,KAAK,EACHJ,IAAI,CAACgB,UAAL,KAAoBH,GAApB,GACI;AAAEI,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,KAAK,EAAE;AAArC,KADJ,GAEI;AAAED,MAAAA,eAAe,EAAE;AAAnB,KANR;AAQE,IAAA,SAAS,EAAC,8BARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,GAAP,CAVF,eAWE;AACE,IAAA,GAAG,EAAC,EADN;AAEE,IAAA,SAAS,EAAC,+BAFZ;AAGE,IAAA,GAAG,EAAC,eAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADD,CADH,CANF,CADF;AA8BD;;AAED,eAAed,OAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { setUserAnswer } from \"../../slices/rootSlice\";\n\nfunction Answers({ data, dispatch }) {\n  function optionClicked(e, index) {\n    dispatch(setUserAnswer({ e, index }));\n  }\n  return (\n    <>\n      <span\n        style={{ position: \"absolute\", top: \"0\", right: \"0\", fontSize: \"18px\" }}\n      >\n        {data.question.length}\n      </span>\n      <ul className=\"App__container--list\">\n        {data.possibleAnswers.map((ans, index) => (\n          <li\n            key={index}\n            onClick={(e) => optionClicked(e.target.textContent, index)}\n            style={\n              data.userAnswer === ans\n                ? { backgroundColor: \"#5255ca\", color: \"white\" }\n                : { backgroundColor: \"initial\" }\n            }\n            className=\"App__container--list--answer\"\n          >\n            <span>{ans}</span>\n            <img\n              alt=\"\"\n              className=\"App__container--list--chevron\"\n              src=\"./chevron.png\"\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default Answers;\n"]},"metadata":{},"sourceType":"module"}