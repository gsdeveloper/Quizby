{"ast":null,"code":"var _jsxFileName = \"/home/guilhermesnd/\\xC1rea de Trabalho/shit_talkers/src/components/Context.js\";\nimport React, { useReducer } from \"react\";\nimport { createContext } from \"react\";\nconst Dispatch = createContext();\nconst Data = createContext();\nexport default function Context({\n  children\n}) {\n  const initialData = {\n    question: \"\",\n    answer: []\n  };\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"POSSIBLE_ANSWERS_INSERT\":\n        return { ...state,\n          // action payload has the format of a array, so maybe it can cause a bug.\n          possibleAnswers: action.payload\n        };\n\n      case \"QUESTION_ANSWER_INSERT\":\n        return { ...state,\n          question: action.question,\n          answer: action.answer\n        };\n\n      default:\n        return console.log(\"default\");\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialData);\n  return /*#__PURE__*/React.createElement(Data.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dispatch.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, children));\n}\nexport { Data, Dispatch };","map":{"version":3,"sources":["/home/guilhermesnd/Área de Trabalho/shit_talkers/src/components/Context.js"],"names":["React","useReducer","createContext","Dispatch","Data","Context","children","initialData","question","answer","reducer","state","action","type","possibleAnswers","payload","console","log","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,MAAMC,QAAQ,GAAGD,aAAa,EAA9B;AACA,MAAME,IAAI,GAAGF,aAAa,EAA1B;AAEA,eAAe,SAASG,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA+B;AAC5C,QAAMC,WAAW,GAAG;AAClBC,IAAAA,QAAQ,EAAE,EADQ;AAElBC,IAAAA,MAAM,EAAE;AAFU,GAApB;;AAKA,QAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,yBAAL;AACE,eAAO,EACL,GAAGF,KADE;AAEL;AACAG,UAAAA,eAAe,EAAEF,MAAM,CAACG;AAHnB,SAAP;;AAKF,WAAK,wBAAL;AACE,eAAO,EACL,GAAGJ,KADE;AAELH,UAAAA,QAAQ,EAAEI,MAAM,CAACJ,QAFZ;AAGLC,UAAAA,MAAM,EAAEG,MAAM,CAACH;AAHV,SAAP;;AAKF;AACE,eAAOO,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAP;AAdJ;AAgBD,GAjBD;;AAkBA,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBjB,UAAU,CAACS,OAAD,EAAUH,WAAV,CAApC;AAEA,sBACE,oBAAC,IAAD,CAAM,QAAN;AAAe,IAAA,KAAK,EAAEI,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD,CAAU,QAAV;AAAmB,IAAA,KAAK,EAAEO,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCZ,QAArC,CADF,CADF;AAKD;AAED,SAASF,IAAT,EAAeD,QAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport { createContext } from \"react\";\n\nconst Dispatch = createContext();\nconst Data = createContext();\n\nexport default function Context({ children }) {\n  const initialData = {\n    question: \"\",\n    answer: [],\n  };\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"POSSIBLE_ANSWERS_INSERT\":\n        return {\n          ...state,\n          // action payload has the format of a array, so maybe it can cause a bug.\n          possibleAnswers: action.payload,\n        };\n      case \"QUESTION_ANSWER_INSERT\":\n        return {\n          ...state,\n          question: action.question,\n          answer: action.answer,\n        };\n      default:\n        return console.log(\"default\");\n    }\n  };\n  const [state, dispatch] = useReducer(reducer, initialData);\n\n  return (\n    <Data.Provider value={state}>\n      <Dispatch.Provider value={dispatch}>{children}</Dispatch.Provider>\n    </Data.Provider>\n  );\n}\n\nexport { Data, Dispatch };\n"]},"metadata":{},"sourceType":"module"}