{"ast":null,"code":"var _jsxFileName = \"/home/guilhermesnd/\\xC1rea de Trabalho/shit_talkers/src/components/Answers.js\";\nimport React, { useEffect, useContext } from \"react\";\nimport { Data, Dispatch } from \"./Context\";\n\nfunction Answers() {\n  const dispatch = useContext(Dispatch);\n  const globalData = useContext(Data);\n  const {\n    possibleAnswers,\n    dataFetched\n  } = globalData;\n  useEffect(() => {\n    if (dataFetched) {\n      console.log(dataFetched);\n      console.log(possibleAnswers);\n      const arr = [];\n\n      while (arr.length < 3) {\n        let n = Math.floor(Math.random() * 3);\n        if (arr.indexOf(n) === -1) arr.push(n);\n      }\n\n      dispatch({\n        type: \"POSSIBLE_ANSWERS_FILTER\",\n        payload: [possibleAnswers[arr[0]], possibleAnswers[arr[1]], possibleAnswers[arr[2]]]\n      });\n    }\n  }, [dataFetched]);\n\n  function answerClicked() {\n    console.log(globalData);\n  }\n\n  return dataFetched && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"App__container--list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, globalData.answerSorted.map((gD, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    onClick: answerClicked,\n    className: \"App__container--list--answer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, console.log(gD)), /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"\",\n    className: \"App__container--list--chevron\",\n    src: \"./chevron.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default Answers;","map":{"version":3,"sources":["/home/guilhermesnd/Área de Trabalho/shit_talkers/src/components/Answers.js"],"names":["React","useEffect","useContext","Data","Dispatch","Answers","dispatch","globalData","possibleAnswers","dataFetched","console","log","arr","length","n","Math","floor","random","indexOf","push","type","payload","answerClicked","answerSorted","map","gD","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,WAA/B;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAMC,QAAQ,GAAGJ,UAAU,CAACE,QAAD,CAA3B;AACA,QAAMG,UAAU,GAAGL,UAAU,CAACC,IAAD,CAA7B;AACA,QAAM;AAAEK,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAmCF,UAAzC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,WAAJ,EAAiB;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,eAAZ;AACA,YAAMI,GAAG,GAAG,EAAZ;;AACA,aAAOA,GAAG,CAACC,MAAJ,GAAa,CAApB,EAAuB;AACrB,YAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAR;AACA,YAAIL,GAAG,CAACM,OAAJ,CAAYJ,CAAZ,MAAmB,CAAC,CAAxB,EAA2BF,GAAG,CAACO,IAAJ,CAASL,CAAT;AAC5B;;AAEDR,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAE,yBADC;AAEPC,QAAAA,OAAO,EAAE,CACPb,eAAe,CAACI,GAAG,CAAC,CAAD,CAAJ,CADR,EAEPJ,eAAe,CAACI,GAAG,CAAC,CAAD,CAAJ,CAFR,EAGPJ,eAAe,CAACI,GAAG,CAAC,CAAD,CAAJ,CAHR;AAFF,OAAD,CAAR;AAQD;AACF,GAnBQ,EAmBN,CAACH,WAAD,CAnBM,CAAT;;AAqBA,WAASa,aAAT,GAAyB;AACvBZ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACD;;AAED,SACEE,WAAW,iBACT;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,UAAU,CAACgB,YAAX,CAAwBC,GAAxB,CAA4B,CAACC,EAAD,EAAKC,KAAL,kBAC3B;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,OAAO,EAAEJ,aAFX;AAGE,IAAA,SAAS,EAAC,8BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOZ,OAAO,CAACC,GAAR,CAAYc,EAAZ,CAAP,CALF,eAME;AACE,IAAA,GAAG,EAAC,EADN;AAEE,IAAA,SAAS,EAAC,+BAFZ;AAGE,IAAA,GAAG,EAAC,eAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADD,CADH,CAFJ;AAoBD;;AAED,eAAepB,OAAf","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport { Data, Dispatch } from \"./Context\";\n\nfunction Answers() {\n  const dispatch = useContext(Dispatch);\n  const globalData = useContext(Data);\n  const { possibleAnswers, dataFetched } = globalData;\n\n  useEffect(() => {\n    if (dataFetched) {\n      console.log(dataFetched);\n      console.log(possibleAnswers);\n      const arr = [];\n      while (arr.length < 3) {\n        let n = Math.floor(Math.random() * 3);\n        if (arr.indexOf(n) === -1) arr.push(n);\n      }\n\n      dispatch({\n        type: \"POSSIBLE_ANSWERS_FILTER\",\n        payload: [\n          possibleAnswers[arr[0]],\n          possibleAnswers[arr[1]],\n          possibleAnswers[arr[2]],\n        ],\n      });\n    }\n  }, [dataFetched]);\n\n  function answerClicked() {\n    console.log(globalData);\n  }\n\n  return (\n    dataFetched && (\n      <ul className=\"App__container--list\">\n        {globalData.answerSorted.map((gD, index) => (\n          <li\n            key={index}\n            onClick={answerClicked}\n            className=\"App__container--list--answer\"\n          >\n            <span>{console.log(gD)}</span>\n            <img\n              alt=\"\"\n              className=\"App__container--list--chevron\"\n              src=\"./chevron.png\"\n            />\n          </li>\n        ))}\n      </ul>\n    )\n  );\n}\n\nexport default Answers;\n"]},"metadata":{},"sourceType":"module"}