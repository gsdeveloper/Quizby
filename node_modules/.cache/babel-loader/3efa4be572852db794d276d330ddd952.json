{"ast":null,"code":"import { useSelector } from \"react-redux\";\nimport { fetchData } from \"../asyncActions/fetchQuestions\";\n\nconst {\n  createSlice\n} = require(\"@reduxjs/toolkit\");\n\nexport const rootSlice = createSlice({\n  name: \"rootReducer\",\n  initialState: {\n    data: [],\n    dataIsFetched: false\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchData.fulfilled]: (state, action) => {\n      state.data.push(action.payload);\n      state.dataIsFetched = true;\n      console.log(\"fullfiled happen\");\n    }\n  }\n});\nexport const {} = rootSlice.actions;\nexport const selectQuestions = state => state.rootReducer.data[0].possibleAnswersFind;\nexport default rootSlice.reducer;","map":{"version":3,"sources":["/home/guilhermesnd/Área de Trabalho/shit_talkers/src/slices/rootSlice.js"],"names":["useSelector","fetchData","createSlice","require","rootSlice","name","initialState","data","dataIsFetched","reducers","extraReducers","fulfilled","state","action","push","payload","console","log","actions","selectQuestions","rootReducer","possibleAnswersFind","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,gCAA1B;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAkBC,OAAO,CAAC,kBAAD,CAA/B;;AAEA,OAAO,MAAMC,SAAS,GAAGF,WAAW,CAAC;AACnCG,EAAAA,IAAI,EAAE,aAD6B;AAEnCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE,EADM;AAEZC,IAAAA,aAAa,EAAE;AAFH,GAFqB;AAMnCC,EAAAA,QAAQ,EAAE,EANyB;AAOnCC,EAAAA,aAAa,EAAE;AACb,KAACT,SAAS,CAACU,SAAX,GAAuB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAACL,IAAN,CAAWO,IAAX,CAAgBD,MAAM,CAACE,OAAvB;AACAH,MAAAA,KAAK,CAACJ,aAAN,GAAsB,IAAtB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;AALY;AAPoB,CAAD,CAA7B;AAgBP,OAAO,MAAM,KAAKb,SAAS,CAACc,OAArB;AAEP,OAAO,MAAMC,eAAe,GAAIP,KAAD,IAC7BA,KAAK,CAACQ,WAAN,CAAkBb,IAAlB,CAAuB,CAAvB,EAA0Bc,mBADrB;AAEP,eAAejB,SAAS,CAACkB,OAAzB","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { fetchData } from \"../asyncActions/fetchQuestions\";\n\nconst { createSlice } = require(\"@reduxjs/toolkit\");\n\nexport const rootSlice = createSlice({\n  name: \"rootReducer\",\n  initialState: {\n    data: [],\n    dataIsFetched: false,\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchData.fulfilled]: (state, action) => {\n      state.data.push(action.payload);\n      state.dataIsFetched = true;\n      console.log(\"fullfiled happen\");\n    },\n  },\n});\n\nexport const {} = rootSlice.actions;\n\nexport const selectQuestions = (state) =>\n  state.rootReducer.data[0].possibleAnswersFind;\nexport default rootSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}