{"ast":null,"code":"import { useSelector } from \"react-redux\";\nimport { fetchData } from \"../asyncActions/fetchQuestions\";\n\nconst {\n  createSlice\n} = require(\"@reduxjs/toolkit\");\n\nexport const rootSlice = createSlice({\n  name: \"rootReducer\",\n  initialState: {\n    value: 0,\n    data: []\n  },\n  reducers: {\n    increment: (state, action) => {\n      state.value += 1;\n    }\n  },\n  extraReducers: {\n    [fetchData.pending]: (state, action) => {\n      state.data = action.payload;\n      console.log(action.payload);\n    },\n    [fetchData.fulfilled]: (state, action) => {\n      state.data = action.payload;\n      console.log(action.payload);\n    },\n    [fetchData.rejected]: (state, action) => {\n      state.data = action.payload;\n      console.log(action.payload);\n    }\n  }\n});\nexport const {\n  increment\n} = rootSlice.actions;\nexport const selectValue = state => state.rootReducer.value;\nexport default rootSlice.reducer;","map":{"version":3,"sources":["/home/guilhermesnd/Área de Trabalho/shit_talkers/src/slices/rootSlice.js"],"names":["useSelector","fetchData","createSlice","require","rootSlice","name","initialState","value","data","reducers","increment","state","action","extraReducers","pending","payload","console","log","fulfilled","rejected","actions","selectValue","rootReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,gCAA1B;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAkBC,OAAO,CAAC,kBAAD,CAA/B;;AAEA,OAAO,MAAMC,SAAS,GAAGF,WAAW,CAAC;AACnCG,EAAAA,IAAI,EAAE,aAD6B;AAEnCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,CADK;AAEZC,IAAAA,IAAI,EAAE;AAFM,GAFqB;AAMnCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5BD,MAAAA,KAAK,CAACJ,KAAN,IAAe,CAAf;AACD;AAHO,GANyB;AAWnCM,EAAAA,aAAa,EAAE;AACb,KAACZ,SAAS,CAACa,OAAX,GAAqB,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACH,IAAN,GAAaI,MAAM,CAACG,OAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACG,OAAnB;AACD,KAJY;AAKb,KAACd,SAAS,CAACiB,SAAX,GAAuB,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAACH,IAAN,GAAaI,MAAM,CAACG,OAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACG,OAAnB;AACD,KARY;AASb,KAACd,SAAS,CAACkB,QAAX,GAAsB,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACH,IAAN,GAAaI,MAAM,CAACG,OAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACG,OAAnB;AACD;AAZY;AAXoB,CAAD,CAA7B;AA2BP,OAAO,MAAM;AAAEL,EAAAA;AAAF,IAAgBN,SAAS,CAACgB,OAAhC;AAEP,OAAO,MAAMC,WAAW,GAAIV,KAAD,IAAWA,KAAK,CAACW,WAAN,CAAkBf,KAAjD;AAEP,eAAeH,SAAS,CAACmB,OAAzB","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { fetchData } from \"../asyncActions/fetchQuestions\";\n\nconst { createSlice } = require(\"@reduxjs/toolkit\");\n\nexport const rootSlice = createSlice({\n  name: \"rootReducer\",\n  initialState: {\n    value: 0,\n    data: [],\n  },\n  reducers: {\n    increment: (state, action) => {\n      state.value += 1;\n    },\n  },\n  extraReducers: {\n    [fetchData.pending]: (state, action) => {\n      state.data = action.payload;\n      console.log(action.payload);\n    },\n    [fetchData.fulfilled]: (state, action) => {\n      state.data = action.payload;\n      console.log(action.payload);\n    },\n    [fetchData.rejected]: (state, action) => {\n      state.data = action.payload;\n      console.log(action.payload);\n    },\n  },\n});\n\nexport const { increment } = rootSlice.actions;\n\nexport const selectValue = (state) => state.rootReducer.value;\n\nexport default rootSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}