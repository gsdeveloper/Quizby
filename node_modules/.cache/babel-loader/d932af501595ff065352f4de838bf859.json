{"ast":null,"code":"var _jsxFileName = \"/home/guilhermesnd/\\xC1rea de Trabalho/shit_talkers/src/components/Answers.js\";\nimport React, { useEffect, useContext } from \"react\";\nimport { Data, Dispatch } from \"./Context\";\n\nfunction Answers() {\n  const dispatch = useContext(Dispatch);\n  const globalData = useContext(Data);\n  const {\n    possibleAnswers,\n    dataFetched,\n    answer\n  } = globalData;\n  useEffect(() => {\n    if (dataFetched) {\n      const arr = [];\n\n      while (arr.length < 3) {\n        let n = Math.floor(Math.random() * 3);\n        if (arr.indexOf(n) === -1) arr.push(n);\n      }\n\n      arr.forEach((item, i) => {\n        console.log(possibleAnswers[item]);\n      });\n      dispatch({\n        type: \"POSSIBLE_ANSWERS_FILTER\",\n        payload: [possibleAnswers[arr[0]], possibleAnswers[arr[1]], possibleAnswers[arr[2]]]\n      });\n    }\n  }, [dataFetched]);\n\n  function answerClicked(i) {\n    console.log(i);\n    console.log(\"clicked\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"App__container--list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, globalData.answerSorted.map((ans, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    onClick: () => answerClicked(index),\n    className: \"App__container--list--answer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, ans), /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"\",\n    className: \"App__container--list--chevron\",\n    src: \"./chevron.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Answers;","map":{"version":3,"sources":["/home/guilhermesnd/Área de Trabalho/shit_talkers/src/components/Answers.js"],"names":["React","useEffect","useContext","Data","Dispatch","Answers","dispatch","globalData","possibleAnswers","dataFetched","answer","arr","length","n","Math","floor","random","indexOf","push","forEach","item","i","console","log","type","payload","answerClicked","answerSorted","map","ans","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,WAA/B;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAMC,QAAQ,GAAGJ,UAAU,CAACE,QAAD,CAA3B;AACA,QAAMG,UAAU,GAAGL,UAAU,CAACC,IAAD,CAA7B;AACA,QAAM;AAAEK,IAAAA,eAAF;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA;AAAhC,MAA2CH,UAAjD;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,WAAJ,EAAiB;AACf,YAAME,GAAG,GAAG,EAAZ;;AACA,aAAOA,GAAG,CAACC,MAAJ,GAAa,CAApB,EAAuB;AACrB,YAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAR;AACA,YAAIL,GAAG,CAACM,OAAJ,CAAYJ,CAAZ,MAAmB,CAAC,CAAxB,EAA2BF,GAAG,CAACO,IAAJ,CAASL,CAAT;AAC5B;;AACDF,MAAAA,GAAG,CAACQ,OAAJ,CAAY,CAACC,IAAD,EAAOC,CAAP,KAAa;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAYf,eAAe,CAACY,IAAD,CAA3B;AACD,OAFD;AAIAd,MAAAA,QAAQ,CAAC;AACPkB,QAAAA,IAAI,EAAE,yBADC;AAEPC,QAAAA,OAAO,EAAE,CACPjB,eAAe,CAACG,GAAG,CAAC,CAAD,CAAJ,CADR,EAEPH,eAAe,CAACG,GAAG,CAAC,CAAD,CAAJ,CAFR,EAGPH,eAAe,CAACG,GAAG,CAAC,CAAD,CAAJ,CAHR;AAFF,OAAD,CAAR;AAQD;AACF,GApBQ,EAoBN,CAACF,WAAD,CApBM,CAAT;;AAsBA,WAASiB,aAAT,CAAuBL,CAAvB,EAA0B;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,UAAU,CAACoB,YAAX,CAAwBC,GAAxB,CAA4B,CAACC,GAAD,EAAMC,KAAN,kBAC3B;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,OAAO,EAAE,MAAMJ,aAAa,CAACI,KAAD,CAF9B;AAGE,IAAA,SAAS,EAAC,8BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,GAAP,CALF,eAME;AACE,IAAA,GAAG,EAAC,EADN;AAEE,IAAA,SAAS,EAAC,+BAFZ;AAGE,IAAA,GAAG,EAAC,eAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADD,CADH,CADF;AAkBD;;AAED,eAAexB,OAAf","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport { Data, Dispatch } from \"./Context\";\n\nfunction Answers() {\n  const dispatch = useContext(Dispatch);\n  const globalData = useContext(Data);\n  const { possibleAnswers, dataFetched, answer } = globalData;\n\n  useEffect(() => {\n    if (dataFetched) {\n      const arr = [];\n      while (arr.length < 3) {\n        let n = Math.floor(Math.random() * 3);\n        if (arr.indexOf(n) === -1) arr.push(n);\n      }\n      arr.forEach((item, i) => {\n        console.log(possibleAnswers[item]);\n      });\n\n      dispatch({\n        type: \"POSSIBLE_ANSWERS_FILTER\",\n        payload: [\n          possibleAnswers[arr[0]],\n          possibleAnswers[arr[1]],\n          possibleAnswers[arr[2]],\n        ],\n      });\n    }\n  }, [dataFetched]);\n\n  function answerClicked(i) {\n    console.log(i);\n    console.log(\"clicked\");\n  }\n\n  return (\n    <ul className=\"App__container--list\">\n      {globalData.answerSorted.map((ans, index) => (\n        <li\n          key={index}\n          onClick={() => answerClicked(index)}\n          className=\"App__container--list--answer\"\n        >\n          <span>{ans}</span>\n          <img\n            alt=\"\"\n            className=\"App__container--list--chevron\"\n            src=\"./chevron.png\"\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default Answers;\n"]},"metadata":{},"sourceType":"module"}